/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

#define ABC         0
#define NUM         1
#define FUN         2

/ {
    behaviors {
        td_ESC: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp CAPS>;
        };

        td_ESC_grave: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp GRAVE>;
        };

        lr_up: layer_up {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&to 0>, <&to 2>;

            mods = <(MOD_LSFT)>;
        };

        lr_upg: layer_up_game_mode {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&mo 0>, <&to 0>;

            mods = <(MOD_LSFT)>;
        };
    };

    macros {
        Macro1: Macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp N6 &kp N0 &kp N1 &kp N7 &kp N1 &kp N5 &kp N7 &kp N5>;
            label = "MACRO1";
        };

        Macro2: Macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(S) &kp P &kp R &kp I &kp N &kp G &kp N2 &kp N0 &kp N2 &kp N5 &kp RET>;
            label = "MACRO2";
        };

        Degrees: Degrees {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>;

            label = "DEGREES";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        ABC {
            bindings = <
&kp ESC    &kp Q         &kp W         &kp E  &kp R  &kp T      &kp Y      &kp U      &kp I      &kp O           &kp P           &kp BSPC
&kp TAB    &kp A         &kp S         &kp D  &kp F  &kp G      &kp H      &kp J      &kp K      &kp L           &kp SEMICOLON   &kp SQT
&kp LSHFT  &kp Z         &kp X         &kp C  &kp V  &kp B      &kp N      &kp M      &kp COMMA  &kp DOT         &kp UP_ARROW    &kp ENTER
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &mo 2  &mo 1  &kp SPACE  &kp SPACE  &kp MINUS  &kp SLASH  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
            >;
        };

        NUM {
            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3      &kp N4   &kp N5     &kp N6     &kp N7     &kp N8     &kp N9          &kp N0          &kp DEL
&kp TAB    &kp F1    &kp F2    &kp F3      &kp F4   &kp F5     &kp F6     &kp MINUS  &kp PG_UP  &kp LBKT        &kp RBKT        &kp BSLH
&kp LSHFT  &kp F7    &kp F8    &kp F9      &kp F10  &kp F11    &kp F12    &kp EQUAL  &kp PG_DN  &kp HOME        &kp UP_ARROW    &kp ENTER
&kp LCTRL  &kp LGUI  &kp LALT  &sys_reset  &lr_up   &kp SPACE  &kp SPACE  &to 1      &kp LEFT   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW
            >;
        };

        FUN {
            bindings = <
&kp TAB    &kp Q     &kp W     &kp E     &kp R  &kp T      &kp Y      &kp U  &kp I      &kp O      &kp P     &kp BSPC
&kp TAB    &kp A     &kp S     &kp D     &kp F  &kp G      &kp H      &kp J  &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z     &kp X     &kp C     &kp V  &kp B      &kp N      &kp M  &kp COMMA  &kp DOT    &kp FSLH  &kp ENTER
&kp LCTRL  &kp LGUI  &kp LALT  &kp BSLH  &mo 0  &kp SPACE  &kp SPACE  &mo 0  &kp LEFT   &kp RIGHT  &kp UP    &kp DOWN
            >;
        };
    };
};
